import os


board = [' ', ' ', ' ',
         ' ', ' ', ' ',
         ' ', ' ', ' ']

winning_combinations = [
    [0, 1, 2], [3, 4, 5], [6, 7, 8],  
    [0, 3, 6], [1, 4, 7], [2, 5, 8],  
    [0, 4, 8], [2, 4, 6]  
]


def draw_board():
    os.system('cls' if os.name == 'nt' else 'clear')
    print(f' {board[0]} | {board[1]} | {board[2]} ')
    print('-----------')
    print(f' {board[3]} | {board[4]} | {board[5]} ')
    print('-----------')
    print(f' {board[6]} | {board[7]} | {board[8]} ')


def get_move(player):
    while True:
        move = input(f'{player}, enter your move (1-9): ')
        try:
            move = int(move)
            if move >= 1 and move <= 9:
                move -= 1  
                if board[move] == ' ':
                    return move
                else:
                    print('That space is already occupied.')
            else:
                print('Invalid move.')
        except ValueError:
            print('Invalid input.')


def check_for_winner():
    for combination in winning_combinations:
        if board[combination[0]] == board[combination[1]] == board[combination[2]] and board[combination[0]] != ' ':
            return board[combination[0]]
    return None


def main():
    draw_board()
    while True:
        for player in ['X', 'O']:
            move = get_move(player)
            board[move] = player
            draw_board()
            winner = check_for_winner()
            if winner:
                print(f'{winner} wins!')
                return
            if all(space != ' ' for space in board):
                print('The game is a draw.')
                return


if __name__ == '__main__':
    main()
